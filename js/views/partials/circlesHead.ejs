<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta http-equiv="X-UA-Compatible" content="ie=edge" />

<title>Circles</title>


<!-- Paper.js is an open source vector graphics scripting framework-->
<script src="js/paper-full.js"></script>

<!-- HOWLER.JS IS A JAVASCRIPT AUDIO LIBRARY THAT ALLOWS EASY AUDIO PLAYBACK-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/howler/2.1.3/howler.js"></script>

<!--THIS IS THE MAIN CANVAS CSS FOR THE INTERACTIVE WINDOW-->
<link rel="stylesheet" href="css/circles.css" />

<!--THIS IS THE TAILWIND CSS FOR THE NAV BAR-->
<link rel="stylesheet" href="css/styles.css" />


<!-- JAVASCRIPT THAT DEFINES SOUNDS AND CIRCLE COLOURS FOR EACH KEY-->
<script type="text/paperscript" canvas="myCanvas">

    var keyData = {
        q: {
            sound: new Howl({
                src: ['sounds/bubbles.mp3']
            }),
            color: '#1abc9c'
        },
        w: {
            sound: new Howl({
                src: ['sounds/clay.mp3']
            }),
            color: '#2ecc71'
        },
        e: {
            sound: new Howl({
                src: ['sounds/confetti.mp3']
            }),
            color: '#3498db'
        },
        r: {
            sound: new Howl({
                src: ['sounds/corona.mp3']
            }),
            color: '#9b59b6'
        },
        t: {
            sound: new Howl({
                src: ['sounds/dotted-spiral.mp3']
            }),
            color: '#34495e'
        },
        y: {
            sound: new Howl({
                src: ['sounds/flash-1.mp3']
            }),
            color: '#16a085'
        },
        u: {
            sound: new Howl({
                src: ['sounds/flash-2.mp3']
            }),
            color: '#27ae60'
        },
        i: {
            sound: new Howl({
                src: ['sounds/flash-3.mp3']
            }),
            color: '#2980b9'
        },
        o: {
            sound: new Howl({
                src: ['sounds/glimmer.mp3']
            }),
            color: '#8e44ad'
        },
        p: {
            sound: new Howl({
                src: ['sounds/moon.mp3']
            }),
            color: '#2c3e50'
        },
        a: {
            sound: new Howl({
                src: ['sounds/pinwheel.mp3']
            }),
            color: '#f1c40f'
        },
        s: {
            sound: new Howl({
                src: ['sounds/piston-1.mp3']
            }),
            color: '#e67e22'
        },
        d: {
            sound: new Howl({
                src: ['sounds/piston-2.mp3']
            }),
            color: '#e74c3c'
        },
        f: {
            sound: new Howl({
                src: ['sounds/prism-1.mp3']
            }),
            color: '#95a5a6'
        },
        g: {
            sound: new Howl({
                src: ['sounds/prism-2.mp3']
            }),
            color: '#f39c12'
        },
        h: {
            sound: new Howl({
                src: ['sounds/prism-3.mp3']
            }),
            color: '#d35400'
        },
        j: {
            sound: new Howl({
                src: ['sounds/splits.mp3']
            }),
            color: '#1abc9c'
        },
        k: {
            sound: new Howl({
                src: ['sounds/squiggle.mp3']
            }),
            color: '#2ecc71'
        },
        l: {
            sound: new Howl({
                src: ['sounds/strike.mp3']
            }),
            color: '#3498db'
        },
        z: {
            sound: new Howl({
                src: ['sounds/suspension.mp3']
            }),
            color: '#9b59b6'
        },
        x: {
            sound: new Howl({
                src: ['sounds/timer.mp3']
            }),
            color: '#34495e'
        },
        c: {
            sound: new Howl({
                src: ['sounds/ufo.mp3']
            }),
            color: '#16a085'
        },
        v: {
            sound: new Howl({
                src: ['sounds/veil.mp3']
            }),
            color: '#27ae60'
        },
        b: {
            sound: new Howl({
                src: ['sounds/wipe.mp3']
            }),
            color: '#2980b9'
        },
        n: {
            sound: new Howl({
                src: ['sounds/zig-zag.mp3']
            }),
            color: '#8e44ad'
        },
        m: {
            sound: new Howl({
                src: ['sounds/moon.mp3']
            }),
            color: '#2c3e50'
        }
    }

    var circles = [];

    // FUNCTION SELECTS A RANDOM POINT IN THE WINDOW, ADDS A CIRCLE AND PLAYS THE CORRESPONDING SOUND
    function onKeyDown(event) {

        if(keyData[event.key]){
            //define max dimensions of browser window
            var maxPoint = new Point(view.size.width, view.size.height);
            //create a random number between 0 and 1
            var randomPoint = Point.random();
            //create random point between 0 and max browser dimensions
            var point = maxPoint * randomPoint;
            //create a new circle at a random point in browser window
            var newCircle = new Path.Circle(point, 500);
            //assign color based on info in keyData object, passing in argument.key to define which key was pressed
            newCircle.fillColor = keyData[event.key].color;
            //play sound associated with the pressed key
            keyData[event.key].sound.play();
            //add this new circle to the array - needed as multiple circles may be present at any one time
            circles.push(newCircle);
        }
    }


    //animate the circles - loop thorugh the array and change colour and scale down
    function onFrame(event){
        for(var i = 0; i < circles.length; i++){
            circles[i].fillColor.hue += 1;
            circles[i].scale(.9);
            if(circles[i].area < 1){
                circles[i].remove();//remove circle from canvas
                circles.splice(i, 1);//remove circle from array
            }
        }
    }
</script>
